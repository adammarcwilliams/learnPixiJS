{"version":3,"sources":["../es6/fromFrames.js"],"names":[],"mappings":";;;AACA,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS;IAC5B,kBAAkB,GAAG,IAAI,CAAC,kBAAkB;IAC5C,MAAM,GAAG,IAAI,CAAC,MAAM;IACpB,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY;IACtC,OAAO,GAAG,IAAI,CAAC,OAAO;IACtB,SAAS,GAAG,IAAI,CAAC,SAAS;IAC1B,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC;;;AAGpC,IAAI,KAAK,GAAG,IAAI,SAAS,EAAE;IACzB,QAAQ,GAAG,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;;;AAGzC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,kBAAkB,CAAC;AAChD,QAAQ,CAAC,eAAe,GAAG,UAAU,CAAC;;;AAGtC,MAAM,CACH,GAAG,CAAC,wBAAwB,CAAC,CAC7B,IAAI,CAAC,KAAK,CAAC,CAAC;;;AAGf,IAAI,KAAK,GAAG,IAAI,CAAC;;;AAGjB,IAAI,KAAK,YAAA,CAAC;;AAEV,SAAS,KAAK,GAAG;;;;;;AAMf,MAAI,MAAM,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;;;AAGhD,OAAK,GAAG,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;;AAGrC,OAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3B,OAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;;AAEtB,OAAK,CAAC,IAAI,EAAE,CAAC;AACb,OAAK,CAAC,cAAc,GAAG,GAAG,CAAC;AAC3B,SAAO,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;;;AAG3B,UAAQ,EAAE,CAAC;CACZ;;AAED,SAAS,QAAQ,GAAE;;;AAGjB,uBAAqB,CAAC,QAAQ,CAAC,CAAC;;;AAGhC,OAAK,EAAE,CAAC;;;AAGR,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;CACxB;;AAED,SAAS,IAAI,GAAG,EAEf;;AAED,SAAS,WAAW,GAAgE;MAA/D,WAAW,gCAAG,CAAC;MAAE,SAAS,gCAAG,CAAC;MAAE,QAAQ,gCAAG,EAAE;MAAE,SAAS,gCAAG,EAAE;;;AAGhF,MAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,OAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAChD,QAAI,KAAK,GAAG,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAC;AACrC,UAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACpB;;;AAGD,SAAO,MAAM,CAAC;CACf","file":"fromFrames.js","sourcesContent":["//Aliases\nlet Container = PIXI.Container,\n  autoDetectRenderer = PIXI.autoDetectRenderer,\n  loader = PIXI.loader,\n  TextureCache = PIXI.utils.TextureCache,\n  Texture = PIXI.Texture,\n  Rectangle = PIXI.Rectangle,\n  MovieClip = PIXI.extras.MovieClip;\n\n//Create a Pixi stage and renderer\nlet stage = new Container(),\n  renderer = autoDetectRenderer(256, 256);\ndocument.body.appendChild(renderer.view);\n\n//Set the canvas's border style and background color\nrenderer.view.style.border = \"1px dashed black\";\nrenderer.backgroundColor = \"0xFFFFFF\";\n\n//load resources (images and fonts)\nloader\n  .add(\"images/pixieAtlas.json\")\n  .load(setup);\n\n//Set the initial game state\nlet state = play;\n\n//Define any variables that are used in more than one function\nlet pixie;\n\nfunction setup() {\n\n  //Create an array that references the frames you want to use\n  //let frames = [\"pixie0.png\", \"pixie1.png\", \"pixie2.png\"];\n\n  //Use the custom `frameSeries` function to create the frames array\n  let frames = frameSeries(0, 2, \"pixie\", \".png\");\n\n  //Create a MoveClip from the frames\n  pixie = MovieClip.fromFrames(frames);\n\n  //Set the sprite's position and add it to the stage\n  pixie.position.set(32, 32);\n  stage.addChild(pixie);\n\n  pixie.play();\n  pixie.animationSpeed = 0.1;\n  console.log(pixie.textures)\n\n  //Start the game loop\n  gameLoop();\n}\n\nfunction gameLoop(){\n\n  //Loop this function 60 times per second\n  requestAnimationFrame(gameLoop);\n\n  //Run the current state\n  state();\n\n  //Render the stage\n  renderer.render(stage);\n}\n\nfunction play() {\n\n}\n\nfunction frameSeries(startNumber = 0, endNumber = 1, baseName = \"\", extension = \"\") {\n\n  //Create an array to store the frame names\n  let frames = [];\n\n  for (let i = startNumber; i < endNumber + 1; i++) {\n    let frame = baseName + i + extension;\n    frames.push(frame);\n  }\n \n  //Return the array of frames\n  return frames;\n}\n\n"]}